@page "/accounts/details"
@inject DatingProject.Data.AppDbContext DB
@using DatingProject.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Account</h4>
    <hr />
    @if (account is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@account.FirstName</dd>
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@account.LastName</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@account.Email</dd>
            <dt class="col-sm-2">UserName</dt>
            <dd class="col-sm-10">@account.UserName</dd>
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@account.Password</dd>
            <dt class="col-sm-2">CreatedDate</dt>
            <dd class="col-sm-10">@account.CreatedDate</dd>
        </dl>
        <div>
            <a href="@($"/accounts/edit?accountsid={account.AccountsId}")">Edit</a> |
            <a href="@($"/accounts")">Back to List</a>
        </div>
    }
</div>

@code {
    Account? account;

    [SupplyParameterFromQuery]
    public int AccountsId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        account = await DB.Accounts.FirstOrDefaultAsync(m => m.AccountsId == AccountsId);

        if (account is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
